name: CI/CD Pipeline

on:
  push:
    branches:
      - master
      - 'feature/*'
      - 'hotfix/*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Install Maven
        run: |
          MAVEN_VERSION=3.9.8
          wget https://archive.apache.org/dist/maven/maven-3/$MAVEN_VERSION/binaries/apache-maven-$MAVEN_VERSION-bin.tar.gz
          tar -xzf apache-maven-$MAVEN_VERSION-bin.tar.gz
          sudo mv apache-maven-$MAVEN_VERSION /opt/maven
          echo "MAVEN_HOME=/opt/maven" >> $GITHUB_ENV
          echo "/opt/maven/bin" >> $GITHUB_PATH
          rm apache-maven-$MAVEN_VERSION-bin.tar.gz

      - name: Determine version bump type
        id: determine_version
        run: |
          if [[ "$(git log -1 --pretty=%B)" == *"#major"* ]]; then
            echo "version_type=major" >> $GITHUB_ENV
          elif [[ "$(git log -1 --pretty=%B)" == *"#minor"* ]]; then
            echo "version_type=minor" >> $GITHUB_ENV
          elif [[ "$(git log -1 --pretty=%B)" == *"#patch"* ]]; then
            echo "version_type=patch" >> $GITHUB_ENV
          else
            echo "version_type=patch" >> $GITHUB_ENV
          fi

      - name: Maven Version Bump
        id: bump
        uses: nnichols/maven-version-bump-action@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          type: ${{ env.version_type }}

      - name: Print new version
        run: |
          echo "New version: ${{ steps.bump.outputs.version }}"

      - name: Build with Maven
        run: mvn clean install

      - name: Run tests
        run: mvn test

      - name: Build and push Docker image
        run: |
          DOCKER_IMAGE_TAG="asdumitrescu/maven-app:${{ steps.bump.outputs.version }}"
          docker build -t $DOCKER_IMAGE_TAG .
          echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
          docker push $DOCKER_IMAGE_TAG

      - name: Deploy Docker image to server
        if: github.ref == 'refs/heads/master'
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
          IMAGE_NAME: asdumitrescu/maven-app:${{ env.new_version }}
          DEPLOY_SERVER_USER: ${{ secrets.DEPLOY_SERVER_USER }}
          DEPLOY_SERVER_IP: ${{ secrets.DEPLOY_SERVER_IP }}
          DEPLOY_SERVER_KEY: ${{ secrets.DEPLOY_SERVER_KEY }}
        run: |
          echo "${{ secrets.DEPLOY_SERVER_KEY }}" > deploy_key.pem
          chmod 400 deploy_key.pem
          ssh -v -t -o StrictHostKeyChecking=no -i deploy_key.pem ${{ secrets.DEPLOY_SERVER_USER }}@${{ secrets.DEPLOY_SERVER_IP }} << EOF
            echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
            docker pull $IMAGE_NAME
            docker stop myapp || true
            docker rm myapp || true
            docker run -d --name myapp -p 8080:8080 $IMAGE_NAME
          EOF

