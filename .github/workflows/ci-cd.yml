name: CI/CD Pipeline

on:
  push:
    branches:
      - master
      - 'hotfix/v*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    concurrency: ci-cd-pipeline-${{ github.ref }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Install Maven
        run: |
          MAVEN_VERSION=3.9.8
          wget https://archive.apache.org/dist/maven/maven-3/$MAVEN_VERSION/binaries/apache-maven-$MAVEN_VERSION-bin.tar.gz
          tar -xzf apache-maven-$MAVEN_VERSION-bin.tar.gz
          sudo mv apache-maven-$MAVEN_VERSION /opt/maven
          echo "MAVEN_HOME=/opt/maven" >> $GITHUB_ENV
          echo "/opt/maven/bin" >> $GITHUB_PATH
          rm apache-maven-$MAVEN_VERSION-bin.tar.gz

      - name: Build with Maven
        run: mvn clean install

      - name: Maven Version Bump Action
        id: bump_version
        uses: nnichols/maven-version-bump-action@v5
        with:
          release-type: patch

      - name: Commit new version
        run: |
          git add pom.xml
          if ! git diff-index --quiet HEAD; then
            git commit -m "Increment version to ${{ steps.bump_version.outputs.new_version }}"
            git push
          else
            echo "No changes to commit"
          fi

      - name: Print new version
        run: echo "New version: ${{ steps.bump_version.outputs.new_version }}"

      - name: Build with Maven
        run: mvn clean package

      - name: Run tests
        run: mvn test

      - name: Build and push Docker image
        run: |
          DOCKER_IMAGE_TAG="asdumitrescu/maven-app:${{ steps.bump_version.outputs.new_version }}"
          echo "Building Docker image with tag: $DOCKER_IMAGE_TAG"
          docker build -t $DOCKER_IMAGE_TAG .
          echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
          docker push $DOCKER_IMAGE_TAG

      - name: Extract JAR from Docker image
        run: |
          CONTAINER_ID=$(docker create asdumitrescu/maven-app:${{ steps.bump_version.outputs.new_version }})
          docker cp $CONTAINER_ID:/app/app.jar ./app.jar
          docker rm $CONTAINER_ID

      - name: Upload JAR to GitHub Packages
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_GITLAB_ACTION }}
        run: |
          mvn deploy -DskipTests=true -DaltDeploymentRepository=github::default::https://maven.pkg.github.com/asdumitrescu/simple-java-maven-app-Fork

      - name: Deploy Docker image to server
        if: github.ref == 'refs/heads/master'
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
          IMAGE_NAME: asdumitrescu/maven-app:${{ steps.bump_version.outputs.new_version }}
          DOCKER_CONTEXT_CONFIG: ${{ secrets.DOCKER_CONTEXT_CONFIG }}
        run: |
          echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
          echo "${{ secrets.DOCKER_CONTEXT_CONFIG }}" > docker-deploy-github.json
          docker context import docker-deploy-github docker-deploy-github.json
          docker --context docker-deploy-github pull $IMAGE_NAME
          docker --context docker-deploy-github stop myapp || true
          docker --context docker-deploy-github rm myapp || true
          docker --context docker-deploy-github run -d --name myapp -p 8080:8080 $IMAGE_NAME

